{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/serach-panel.js","components/post-status-filter/post-status-filter.js","components/modal-window/modal-window.js","components/post-list-item/post-list-item.js","components/post-edit-form/post-edit-form.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","postsLabel","className","SearchPanel","props","onUpdateSearch","e","term","target","value","toLowerCase","setState","state","Input","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","activeClass","onClick","ModalWindow","onDelete","useState","modal","setModal","toggle","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Button","color","outline","PostListItem","onToogleImportant","onToogleLiked","important","like","date","onToogleOrCancelEdit","postsClasses","Intl","DateTimeFormat","hour","minute","hour12","format","PostEditForm","onValueChange","text","onApply","preventDefault","trim","onEdit","id","editForm","editFormClasses","Form","onSubmit","PostList","posts","elements","item","itemProps","ListGroup","PostAddForm","onAdd","App","deleteItem","data","index","findIndex","elem","slice","addItem","body","newItem","maxId","Date","editItem","old","editedItem","onToogleOption","option","searchPost","items","length","indexOf","filterPost","Array","isArray","visiblePosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a442fc1.chunk.js","sourcesContent":["import React from 'react';\n\nimport './app-header.sass';\n\nconst AppHeader = ({liked, allPosts, postsLabel}) => {\n    return (\n    <div className=\"app-header d-flex\">\n        <h1>Svetlana Suslova</h1>\n        <h2>{allPosts} {postsLabel}, liked {liked}</h2>\n    </div>\n    ) \n}\n\nexport default AppHeader;","import React, {Component} from 'react';\nimport { Input } from 'reactstrap';\nimport './search-panel.sass';\n\nexport default class SearchPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: ''\n        }\n    }\n    onUpdateSearch = (e) => {\n        const term = e.target.value.toLowerCase();\n        this.setState({term});\n        this.props.onUpdateSearch(term)\n    }\n    \n    render() {\n        return (\n            <Input \n                className=\"search-input\"\n                type=\"text\"\n                placeholder=\"Search\"\n                onChange={this.onUpdateSearch}\n            />\n            )\n    } \n}","import React, { Component } from 'react';\nimport './post-status-filter.sass';\n\nexport default class PostStatusFilter extends Component {\n    constructor(props) {\n        super(props);\n        this.buttons = [\n            {name: 'all', label: 'All'},\n            {name: 'like', label: 'Favourite'}\n        ]\n    }\n    render() {\n        const buttons = this.buttons.map(({name, label}) => {\n            const {filter, onFilterSelect} = this.props;\n            const active = filter === name;\n            const activeClass = active ? 'btn-info' : 'btn-outline-secondary'\n            return (\n                <button \n                type=\"button\" \n                key={name} \n                className={`btn ${activeClass}`}\n                onClick={() => onFilterSelect(name)}>{label}</button>\n            )\n        })\n        return (\n            <div className=\"btn-group\">\n             {buttons}\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Modal,ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\n\nconst ModalWindow = ({onDelete}) => {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <butoon onClick={toggle}><i className=\"fa fa-trash-o\"></i></butoon>\n      <Modal isOpen={modal} toggle={toggle} >\n        <ModalHeader toggle={toggle}>Are you sure?</ModalHeader>\n        <ModalBody>Your post will be ultimately deleted.</ModalBody>\n        <ModalFooter>\n         <Button color=\"info\" onClick={onDelete}>Delete</Button>{' '}\n         <Button outline color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ModalWindow;","import React from 'react';\nimport ModalWindow from '../modal-window/modal-window'; \nimport './post-list-item.sass';\n\nconst PostListItem = ({label, onDelete, onToogleImportant, onToogleLiked, important, like, date, onToogleOrCancelEdit}) =>  {\n    let postsClasses = 'app-list-item d-flex justify-content-between';\n    \n    if (important) {\n        postsClasses +=' important';\n    }\n    if (like) {\n        postsClasses +=' like';\n    }\n\n        return (\n            <div className={postsClasses}>\n                <span \n                className=\"app-list-item-label\"\n                onClick={onToogleLiked}>\n                    {label}\n                </span>\n                <div className=\"d-flex justify-content-center align-items-center\">\n                    <button \n                        type=\"button\"\n                        className=\"btn-star btn-sm\"\n                        onClick={onToogleImportant}>\n                        <i className=\"fa fa-star\"></i>\n                    </button>\n                    <button \n                        type=\"button\"\n                        className=\"btn-edit btn-sm\"\n                        onClick={onToogleOrCancelEdit}>\n                        <i className=\"fa fa-edit\"></i>\n                    </button>\n                    <button \n                        type=\"button\"\n                        className=\"btn-trash btn-sm\">\n                        <ModalWindow onDelete={onDelete}></ModalWindow>\n                    </button>\n                    <i className=\"fa fa-heart\"></i>\n                    <span \n                    className=\"app-list-item-date\">\n                    {new Intl.DateTimeFormat('en-US', \n                    { hour: 'numeric', minute: 'numeric', hour12: false} )\n                    .format(date)}\n                    </span>\n                </div>\n            </div>   \n        )      \n}\n\nexport default PostListItem;","import React, { Component } from 'react';\nimport { Button, Form, Input } from 'reactstrap';\n\nexport default class PostEditForm extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: this.props.label\n        }\n    }\n    onValueChange = (e) => {\n        this.setState({\n            text: e.target.value\n        })\n    }\n    onApply = (e) => {\n        const {text} = this.state;\n        e.preventDefault();\n        if ( !(text.trim() === '') ) {\n            this.props.onEdit(this.props.id, text);        \n        }\n        this.props.onToogleOrCancelEdit();\n    }\n\n    onToogleOrCancelEdit = () => {\n        this.setState({text: this.props.label});\n        this.props.onToogleOrCancelEdit();\n    }\n    \n      \n    render() {\n        let {editForm} = this.props;\n        let editFormClasses = 'bottom-panel';\n        if (!editForm) {\n            editFormClasses +=' d-none';\n        }\n        if (editForm) {\n            editFormClasses +=' d-flex';\n        }\n\n        return (\n            <Form \n            className={editFormClasses}\n            onSubmit={this.onApply}>\n                <Input\n                    type=\"text\"\n                    className=\"new-post-label\"\n                    onChange={this.onValueChange}\n                    value={this.state.text}/>\n                <div className=\"btn-group\">\n                    <Button\n                    type=\"submit\"\n                    outline color=\"secondary\">Apply\n                    </Button>\n                    <Button\n                    type=\"button\"\n                    color=\"info\"\n                    onClick={this.onToogleOrCancelEdit}>Cancel\n                    </Button>\n                </div>\n            </Form>\n        )\n    }     \n}","import React from 'react';\nimport PostListItem from '../post-list-item/post-list-item';\nimport PostEditForm from '../post-edit-form/post-edit-form';\nimport { ListGroup } from 'reactstrap';\nimport './post-list.sass';\n\nconst PostList = ({posts, onDelete, onToogleImportant, onToogleLiked, onEdit, onToogleOrCancelEdit}) => {\n     \n     let elements = posts.map((item) => {\n         const {id, ...itemProps} = item;\n         return (\n            <li key={id} className=\"list-group-item\">\n                <PostListItem\n                {...itemProps}\n                onDelete={ () => onDelete(id) }\n                onToogleImportant={ () => onToogleImportant(id) }\n                onToogleLiked={ () => onToogleLiked(id)}\n                onToogleOrCancelEdit={ () => onToogleOrCancelEdit(id)}/>\n                <PostEditForm {...itemProps} onEdit={onEdit} id={id}\n                onToogleOrCancelEdit={ () => onToogleOrCancelEdit(id)}/>\n            </li>\n        )\n    });\n\n    return (\n    <ListGroup className=\"app-list\">\n        {elements}\n    </ListGroup>\n    ) \n}\n\nexport default PostList;","import React, {Component} from 'react';\nimport { Button, Form, Input } from 'reactstrap';\nimport './post-add-form.sass';\n\nexport default class PostAddForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: ''\n        }\n    }\n    onValueChange = (e) => {\n        this.setState({\n            text: e.target.value\n        })\n    }\n    onSubmit = (e) => {\n        const {text} = this.state;\n        e.preventDefault();\n        if ( !(text.trim() === '') ) {\n            this.props.onAdd(text);  \n        }\n        this.setState({\n            text: ''\n        })  \n    }\n\n    render() {\n        return (\n            <Form \n            className=\"bottom-panel d-flex\"\n            onSubmit={this.onSubmit}>\n                <Input\n                    type=\"text\"\n                    placeholder=\"What are your thoughts?\"\n                    className=\"new-post-label\"\n                    onChange={this.onValueChange}\n                    value={this.state.text}/>\n                <Button\n                outline color=\"secondary\">Add\n                </Button>\n            </Form>\n            )\n    }   \n}","import React, {Component} from 'react';\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/serach-panel';\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\nimport PostList from '../post-list/post-list';\nimport PostAddForm from '../post-add-form/post-add-form';\n\nimport './app.sass';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                data : [\n                0,\n                ['Going to learn React.', 'fhgj'],\n                'ttt',\n                null,\n                true,\n                {label: 'Going to learn React.', important: true, like: false, id: 1, date: new Date(), editForm: false},\n                {label: 'That is so good!', important: false, like: false, id: 2, date: new Date(), editForm: false},\n                {label: 'No boredom during the quarantine...', important: false, like: false, id: 3, date: new Date(), editForm: false}\n            ],\n            term: '',\n            filter: 'all'\n        };\n        this.maxId = 4;\n        let elements = this.state.data.filter(item => typeof item === 'object' && !Array.isArray(item) && item != null);\n        this.state.data = elements; \n    }\n\n    deleteItem = (id) => {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    addItem = (body) => {\n        const newItem = {\n            label: body,\n            important: false,\n            id: this.maxId++,\n            date: new Date()\n        }\n        this.setState(({data}) => {\n           const newArr = [...data, newItem];\n           return {\n               data: newArr\n           }\n       })\n    }\n    editItem = (id, body) => {\n        this.setState(({data}) => {\n           const index = data.findIndex(elem => elem.id === id);\n           const old = data[index];\n           const editedItem = {...old, label: body};\n           const newArr = [...data.slice(0, index), editedItem, ...data.slice(index + 1)];;\n           return {\n               data: newArr\n           }\n       })\n    }\n    \n    onToogleOption = (id, option) => {  \n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, [option]: !old[option]};\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    onToogleImportant = (id) => {\n        this.onToogleOption(id, 'important')\n    }\n\n    onToogleLiked = (id) => {\n        this.onToogleOption(id, 'like')\n    }\n\n    onToogleOrCancelEdit = (id) => {\n        this.onToogleOption(id, 'editForm');\n    }\n\n    searchPost = (items, term) => {\n        if (term.length === 0) {\n            return items\n        }\n        return items.filter ( (item) => {\n            return item.label.toLowerCase().indexOf(term) > -1\n        })\n    }\n\n    filterPost = (items, filter) => {\n        if (filter === 'like') {\n            return items.filter(item => item.like)\n        } else {\n            return items\n        }    \n    }\n\n    onUpdateSearch = (term) => {\n        this.setState({term})\n    }\n     \n    onFilterSelect = (filter) => {\n        this.setState({filter})\n    } \n       \n    render() {\n        const {data, term, filter} = this.state; \n        const liked = data.filter(item  => item.like).length;\n        const allPosts = data.length;\n        let postsLabel = 'post';\n        if (allPosts > 1) {\n            postsLabel = 'posts';\n        }\n        const visiblePosts = this.filterPost( this.searchPost(data, term), filter );\n        \n        return (\n            <div className=\"app\">\n                <AppHeader\n                liked={liked}\n                allPosts={allPosts} \n                postsLabel={postsLabel}/>\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel\n                    onUpdateSearch={this.onUpdateSearch}/>\n                    <PostStatusFilter\n                    filter={filter}\n                    onFilterSelect={this.onFilterSelect}/>\n                </div>\n                <PostList posts={visiblePosts}\n                onDelete={this.deleteItem}\n                onToogleImportant={this.onToogleImportant}\n                onToogleLiked={this.onToogleLiked}\n                onEdit={this.editItem}\n                onToogleOrCancelEdit={this.onToogleOrCancelEdit}/>\n                <PostAddForm\n                onAdd={this.addItem}/>\n            </div>      \n        )\n    }    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.sass';\nimport App from './components/app/app';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}